webpackJsonp([44344806946779],{418:function(n,a){n.exports={data:{markdownRemark:{html:'<h1 id="introduction-to-react"><a href="#introduction-to-react" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Introduction to React</h1>\n<p>React is a JavaScript library for creating user interfaces with datasets that change over time. The basic React concepts are Components and Virtual DOM.</p>\n<h2 id="components"><a href="#components" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Components</h2>\n<p>A React Component is any part of a UI that can contain React Nodes. A React Node is a representation of a DOM node inside Virtual DOM and can be created using JSX or JavaScript. A React Node can be either:</p>\n<ul>\n<li>ReactElement: This is the primary type in React. It\'s a light, stateless, immutable, virtual representation of a DOM element.</li>\n<li>ReactText: This is a string or a number. It\'s a virtual representation of a Text Node in the DOM.</li>\n<li>ReactFragment: This is an array of ReactNode elements.</li>\n</ul>\n<p>A React Component can be either Functional Component or Class Component. A Functional Component is a pure JavaScript function that accepts props as its arguments, and returns a React Node. A Class Component is a JavaScript class which extends React.Component and must implement a <code>render()</code> method. In addition, a class based component can override the lifecycle hooks and have internal state.</p>\n<p>Functional and Class Components have a set of read-only properties, which look like HTML attributes, called <strong>props</strong>. A component can access its properties but should never modify them. In addition, each component should declare <strong>propTypes</strong> for each property from <strong>props</strong> that will access and provide <strong>defaultProps</strong> from those that are not required. The following list summarize the props:</p>\n<ol>\n<li>Props are passed into a component from above, either a parent component or from the starting scope where React is originally rendered.</li>\n<li>Props are intended as configuration values passed into the component.</li>\n<li>Props are immutable to the component receiving them.</li>\n</ol>\n<p>Class Components can maintain internally a set of properties called state. The state of a component can change over time. React.Component provides <code>setState()</code> function which will update the internal state. The following list summarize the state:</p>\n<ol>\n<li>State is a JavaScript data object at one point in time that typically is tied to UI.</li>\n<li>State should always start with a default value and then the state is mutated internally by the component using <code>setState()</code>.</li>\n<li>State can only be mutated by the component that contains the state.</li>\n<li>A component should never have shared mutable state.</li>\n<li>State should not contain computed data, other React components, or duplicated date from props.</li>\n<li>State should only contain the minimal amount of data needed to represent your UI\'s state.</li>\n</ol>\n<p><strong>Functional Component</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>  <span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">\'prop-types\'</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> props <span class="token operator">=></span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      Hello World\n      <span class="token punctuation">{</span><span class="token template-string"><span class="token string">`The message prop is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prop<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> and the count prop is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prop<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  MyComponent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * A message prop.\n     */</span>\n    message<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    <span class="token comment">/**\n     * A count prop.\n     */</span>\n    count<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired\n  <span class="token punctuation">}</span>\n\n  MyComponent<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">:</span> <span class="token string">\'default prop value\'</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token operator">&lt;</span>MyComponent message<span class="token operator">=</span><span class="token string">"Hello"</span> count<span class="token operator">=</span><span class="token string">"World"</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p><strong>Class Component</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>  <span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">\'prop-types\'</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n        message<span class="token punctuation">:</span> <span class="token string">\'Hello World\'</span><span class="token punctuation">,</span>\n        count<span class="token punctuation">:</span> <span class="token number">0</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>div<span class="token operator">></span>\n          Hello world<span class="token punctuation">,</span>\n          <span class="token punctuation">{</span><span class="token template-string"><span class="token string">`The message prop is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>prop<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> and the count prop is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>prop<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.`</span></span><span class="token punctuation">}</span>\n          <span class="token punctuation">{</span><span class="token template-string"><span class="token string">`The message state is: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> and the count state is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.`</span></span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  MyComponent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * A message prop.\n     */</span>\n    message<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    <span class="token comment">/**\n     * A count prop.\n     */</span>\n    count<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">.</span>isRequired\n  <span class="token punctuation">}</span>\n\n  MyComponent<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    message<span class="token punctuation">:</span> <span class="token string">\'default prop value\'</span>\n  <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2 id="virtual-dom"><a href="#virtual-dom" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Virtual DOM</h2>\n<p>Virtual DOM is an in-memory and lightweight representation of the DOM. Instead of re-render the entire UI every time state data changes, using the Virtual DOM, React computes the most efficient DOM mutations and applies them.</p>\n<p>DOM changes is a slow task but with Virtual DOM this task\'s performance will be increased. DOM is represented as a tree structure. Changes to a tree structure is pretty quick but the changed DOM element and its children has to go through <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Introduction_to_Layout_in_Mozilla">Reflow/Layout</a> stage and then the changes has to be Re-painted which are slow. Virtual DOM minimizes the Reflow and Layout stages. </p>\n<p>React uses a reconciliation algorithm that compares the Virtual DOM of the current and the previous state and applies the changes to the actual DOM. Once React knows which virtual DOM objects have changed, then React updates those objects, and only those objects, on the real DOM.</p>\n<p>Workflow Overview:</p>\n<ol>\n<li>The entire Virtual DOM gets updated.</li>\n<li>The Virtual DOM gets compared to what it looked like before you updated it. React figures out which objects have changed.</li>\n<li>The changed objects, and the changed objects only, get updated on the real DOM.</li>\n<li>Changes on the real DOM cause the screen to change.</li>\n</ol>\n<h2 id="react-renderers"><a href="#react-renderers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React Renderers</h2>\n<p>React is decoupled from the web. You can used it to implement interfaces across multiple platforms. The most common renderer is known as <a href="https://www.npmjs.com/package/react-dom">react-dom</a> and it supports both client and server side rendering.</p>\n<p><strong>Render in the browser</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>Hello World<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p><strong>Render on the server</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOMServer <span class="token keyword">from</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>Hello World<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOMServer<span class="token punctuation">.</span><span class="token function">renderToString</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MyComponent <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>A list of alternative renderers:</p>\n<ul>\n<li><a href="https://facebook.github.io/react-native/">React Native</a> - is a framework and renderer for mobile platforms including iOS and Android.</li>\n<li><a href="https://github.com/Yomguithereal/react-blessed">react-blessed</a> - allows you to write terminal applications using React. It\'s even possible to animate them.</li>\n<li><a href="https://projectseptemberinc.gitbooks.io/gl-react/content/">gl-react</a> - provides WebGL bindings for React.</li>\n<li><a href="https://github.com/Flipboard/react-canvas">react-canvas</a> - provides React bindings for the Canvas element.</li>\n</ul>',timeToRead:4,excerpt:"Introduction to React React is a JavaScript library for creating user interfaces with datasets that change over time. The basic React…",frontmatter:{title:"React Introduction",cover:"https://unsplash.it/400/300/?random?BoldMage",date:"12-02-2018",category:"front-end",tags:["programming","front-end","react"]},fields:{slug:"/react-introduction"}}},pathContext:{slug:"/react-introduction"}}}});
//# sourceMappingURL=path---react-introduction-ddd78b74216e01978a35.js.map